# Cloud Run optimized Dockerfile for GPU Screenshot Service
FROM nvidia/cuda:12.9.1-runtime-ubuntu20.04

# Install Node.js 22
RUN apt-get update && apt-get install -y curl && \
    curl -fsSL https://deb.nodesource.com/setup_22.x | bash - && \
    apt-get install -y nodejs

ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true

# Set environment variables
ENV NODE_ENV=production
ENV PORT=8080
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility,graphics

ARG DEBIAN_FRONTEND=noninteractive

# Install system dependencies required for Puppeteer
RUN apt-get update && apt-get install -y \
    # Browser dependencies
    wget \
    gnupg \
    ca-certificates \
    procps \
    libxss1 \
    # Fonts for better text rendering
    fonts-liberation \
    fonts-noto-color-emoji \
    fonts-noto-cjk \
    # GPU acceleration (software fallback)
    libegl1 \
    libasound2 \
    libnspr4 \
    libnss3 \
    xdg-utils \
    libgl1-mesa-dri \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    libgbm1 \
    libxkbcommon0 \
    libgtk-3-0 \
    gpg-agent \
    build-essential \
    apt-utils \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml ./

# Enable pnpm
RUN corepack enable
RUN corepack prepare pnpm@latest --activate

# Install dependencies
RUN pnpm install --prod

RUN npx puppeteer browsers install chrome --install-deps

# Copy application code
COPY test.js ./

# Expose the port
EXPOSE 8080

# Start the application
CMD ["node", "test.js"]